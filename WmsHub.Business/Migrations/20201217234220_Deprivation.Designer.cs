// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WmsHub.Business;

namespace WmsHub.Business.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20201217234220_Deprivation")]
    partial class Deprivation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("WmsHub.Business.Entities.Call", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<DateTimeOffset?>("Called")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Number")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Outcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReferralId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Sent")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("ReferralId");

                    b.ToTable("Calls");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.CallAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("Called")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Number")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Outcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReferralId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Sent")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("AuditId");

                    b.ToTable("CallsAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.Deprivation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<int>("ImdDecile")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Lsoa")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Lsoa");

                    b.ToTable("Deprivations");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.DeprivationAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ImdDecile")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Lsoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AuditId");

                    b.ToTable("DeprivationsAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.Referral", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("Address1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Address2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("CalculatedBmiAtRegistration")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("ConsentForFutureContactForEvaluation")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DateOfBirth")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateOfReferral")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DisabilityDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Ethnicity")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FamilyName")
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Gender")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("GivenName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("HasDiabetesType1")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasDiabetesType2")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasDisability")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasHypertension")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasRegisteredSeriousMentalIllness")
                        .HasColumnType("bit");

                    b.Property<decimal?>("HeightCm")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVulnerable")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NhsNumber")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Postcode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReferringGpPracticeNumber")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Sex")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Status")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StatusReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Town")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TriagedCompletionLevel")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TriagedWeightedLevel")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Ubrn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("VulnerableDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("WeightKg")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.HasIndex("FamilyName");

                    b.HasIndex("Mobile");

                    b.HasIndex("NhsNumber");

                    b.HasIndex("Postcode");

                    b.HasIndex("Telephone");

                    b.HasIndex("Ubrn");

                    b.ToTable("Referrals");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.ReferralAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Address2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<decimal?>("CalculatedBmiAtRegistration")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("ConsentForFutureContactForEvaluation")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DateOfBirth")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateOfReferral")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DisabilityDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Ethnicity")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FamilyName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Gender")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("GivenName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("HasDiabetesType1")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasDiabetesType2")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasDisability")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasHypertension")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasRegisteredSeriousMentalIllness")
                        .HasColumnType("bit");

                    b.Property<decimal?>("HeightCm")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVulnerable")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NhsNumber")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Postcode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReferringGpPracticeNumber")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Sex")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Status")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StatusReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Town")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TriagedCompletionLevel")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TriagedWeightedLevel")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Ubrn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("VulnerableDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("WeightKg")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AuditId");

                    b.ToTable("ReferralsAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.RequestResponseLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Controller")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Request")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("RequestAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ResponseAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RequestResponseLog");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.TextMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Number")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Outcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("Received")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ReferralId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Sent")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("ReferralId");

                    b.ToTable("TextMessages");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.TextMessageAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Number")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Outcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("Received")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ReferralId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Sent")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("AuditId");

                    b.ToTable("TextMessagesAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.Call", b =>
                {
                    b.HasOne("WmsHub.Business.Entities.Referral", "Referral")
                        .WithMany("Calls")
                        .HasForeignKey("ReferralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Referral");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.TextMessage", b =>
                {
                    b.HasOne("WmsHub.Business.Entities.Referral", "Referral")
                        .WithMany("TextMessages")
                        .HasForeignKey("ReferralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Referral");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.Referral", b =>
                {
                    b.Navigation("Calls");

                    b.Navigation("TextMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
