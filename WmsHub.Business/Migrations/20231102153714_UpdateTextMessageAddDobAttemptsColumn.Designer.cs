// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WmsHub.Business;

#nullable disable

namespace WmsHub.Business.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231102153714_UpdateTextMessageAddDobAttemptsColumn")]
    partial class UpdateTextMessageAddDobAttemptsColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WmsHub.Business.Entities.AccessKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset>("Expires")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("TryCount")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("AccessKeys");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.Analytics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LinkDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("LinkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PropertyLookup")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Analytics");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.AnalyticsAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LinkDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LinkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PropertyLookup")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuditId");

                    b.ToTable("AnalyticsAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.ApiKeyStore", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<int>("Domain")
                        .HasColumnType("int");

                    b.Property<string>("Domains")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTimeOffset?>("Expires")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("KeyUser")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Sid")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("ApiKeyStore");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.ApiKeyStoreAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<int>("Domain")
                        .HasColumnType("int");

                    b.Property<string>("Domains")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTimeOffset?>("Expires")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("KeyUser")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Sid")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("AuditId");

                    b.ToTable("ApiKeyStoreAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.Call", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<DateTimeOffset?>("Called")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Number")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Outcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReferralId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Sent")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("ReferralId");

                    b.ToTable("Calls");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.CallAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("Called")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Number")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Outcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReferralId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Sent")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("AuditId");

                    b.ToTable("CallsAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.ConfigurationValue", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.HasKey("Id");

                    b.ToTable("ConfigurationValues");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.Deprivation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<int>("ImdDecile")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Lsoa")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Lsoa");

                    b.ToTable("Deprivations");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.DeprivationAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ImdDecile")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Lsoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AuditId");

                    b.ToTable("DeprivationsAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.ElectiveCarePostError", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PostError")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ProcessDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("RowNumber")
                        .HasColumnType("int");

                    b.Property<string>("TrustOdsCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TrustUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ElectiveCarePostErrors");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.ElectiveCareReferral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ReferralId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ElectiveCareReferrals");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.ErsMock.ErsMockReferral", b =>
                {
                    b.Property<string>("Ubrn")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsTriaged")
                        .HasColumnType("bit");

                    b.Property<string>("NhsNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewOutcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Ubrn");

                    b.ToTable("ErsMockReferrals");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.Ethnicity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("Census2001")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("MinimumBmi")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NhsDataDictionary2001Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NhsDataDictionary2001Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TriageName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ethnicities");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.EthnicityAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("Census2001")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupOrder")
                        .HasColumnType("int");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("MinimumBmi")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NhsDataDictionary2001Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NhsDataDictionary2001Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TriageName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuditId");

                    b.ToTable("EthnicitiesAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.EthnicityOverride", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EthnicityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReferralSource")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("EthnicityId");

                    b.ToTable("EthnicityOverrides");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.EthnicityOverrideAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EthnicityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReferralSource")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("AuditId");

                    b.ToTable("EthnicityOverridesAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.GeneralReferral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ReferralId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("GeneralReferrals");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.GpReferral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ReferralId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("GpReferrals");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.MessageQueue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("ApiKeyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Base36DateSentLinkId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PersonalisationJson")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<Guid>("ReferralId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SendResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SendTo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("SentDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Base36DateSentLinkId")
                        .IsUnique()
                        .HasFilter("[Base36DateSentLinkId] IS NOT NULL");

                    b.ToTable("MessagesQueue");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.MskOrganisation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OdsCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("SendDischargeLetters")
                        .HasColumnType("bit");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("OdsCode")
                        .IsUnique();

                    b.ToTable("MskOrganisations");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.MskOrganisationAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OdsCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("SendDischargeLetters")
                        .HasColumnType("bit");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("AuditId");

                    b.ToTable("MskOrganisationsAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.MskReferral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ReferralId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("MskReferrals");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.Organisation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OdsCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("QuotaRemaining")
                        .HasColumnType("int");

                    b.Property<int>("QuotaTotal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OdsCode")
                        .IsUnique();

                    b.ToTable("Organisations");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.OrganisationAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OdsCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("QuotaRemaining")
                        .HasColumnType("int");

                    b.Property<int>("QuotaTotal")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.ToTable("OrganisationsAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.PatientTriage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CheckSum")
                        .HasColumnType("int");

                    b.Property<string>("Descriptions")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TriageSection")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PatientTriages");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.PatientTriageAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<int>("CheckSum")
                        .HasColumnType("int");

                    b.Property<string>("Descriptions")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TriageSection")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.ToTable("PatientTriagesAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.Pharmacist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Expires")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("KeyCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReferringPharmacyEmail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("TryCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pharmacists");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.PharmacistAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("Expires")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("KeyCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReferringPharmacyEmail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("TryCount")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.ToTable("PharmacistsAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.Pharmacy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OdsCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TemplateVersion")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.HasIndex("OdsCode")
                        .IsUnique()
                        .HasFilter("[OdsCode] IS NOT NULL");

                    b.ToTable("Pharmacies");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.PharmacyAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OdsCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateVersion")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("AuditId");

                    b.ToTable("PharmaciesAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.PharmacyReferral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ReferralId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("PharmacyReferrals");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.Practice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OdsCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OdsCode")
                        .IsUnique()
                        .HasFilter("[OdsCode] IS NOT NULL");

                    b.ToTable("Practices");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.PracticeAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OdsCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuditId");

                    b.ToTable("PracticesAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.Provider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("ApiKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("ApiKeyExpires")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("Level1")
                        .HasColumnType("bit");

                    b.Property<bool>("Level2")
                        .HasColumnType("bit");

                    b.Property<bool>("Level3")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.ProviderAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<string>("ApiKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("ApiKeyExpires")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("Level1")
                        .HasColumnType("bit");

                    b.Property<bool>("Level2")
                        .HasColumnType("bit");

                    b.Property<bool>("Level3")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuditId");

                    b.ToTable("ProvidersAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.ProviderAuth", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("AccessToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailContact")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IpWhitelist")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("KeyViaEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("KeyViaSms")
                        .HasColumnType("bit");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SmsKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("SmsKeyExpiry")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("ProviderAuth");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.ProviderAuthAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<string>("AccessToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("EmailContact")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IpWhitelist")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("KeyViaEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("KeyViaSms")
                        .HasColumnType("bit");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SmsKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("SmsKeyExpiry")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("AuditId");

                    b.ToTable("ProviderAuthAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.ProviderSubmission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<int>("Coaching")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Measure")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReferralId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProviderId");

                    b.HasIndex("ReferralId");

                    b.ToTable("ProviderSubmissions");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.ProviderSubmissionAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<int>("Coaching")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Measure")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReferralId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AuditId");

                    b.ToTable("ProviderSubmissionsAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.Questionnaire", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<DateTimeOffset>("EndDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NotificationTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("StartDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("Questionnaires");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.QuestionnaireAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("EndDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NotificationTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("StartDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("AuditId");

                    b.ToTable("QuestionnairesAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.Referral", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("Address1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Address2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Address3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("CalculatedBmiAtRegistration")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("ConsentForFutureContactForEvaluation")
                        .HasColumnType("bit");

                    b.Property<bool?>("ConsentForGpAndNhsNumberLookup")
                        .HasColumnType("bit");

                    b.Property<bool?>("ConsentForReferrerUpdatedWithOutcome")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedByUserId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("CriId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DateCompletedProgramme")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateLetterSent")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateOfBirth")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateOfBmiAtRegistration")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateOfProviderContactedServiceUser")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateOfProviderSelection")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateOfReferral")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DatePlacedOnWaitingList")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateStartedProgramme")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateToDelayUntil")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DelayReason")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Deprivation")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("DocumentVersion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Ethnicity")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FamilyName")
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("FirstRecordedWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset?>("FirstRecordedWeightDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("GivenName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("HasALearningDisability")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasAPhysicalDisability")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasActiveEatingDisorder")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasArthritisOfHip")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasArthritisOfKnee")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasDiabetesType1")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasDiabetesType2")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasHadBariatricSurgery")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasHypertension")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasRegisteredSeriousMentalIllness")
                        .HasColumnType("bit");

                    b.Property<decimal?>("HeightCm")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("HeightFeet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("HeightInches")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HeightUnits")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsErsClosed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMobileValid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPregnant")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTelephoneValid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVulnerable")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LastRecordedWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset?>("LastRecordedWeightDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("LastTraceDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("MethodOfContact")
                        .HasColumnType("int");

                    b.Property<string>("Mobile")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("MostRecentAttachmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("NhsLoginClaimEmail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NhsLoginClaimFamilyName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NhsLoginClaimGivenName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NhsLoginClaimMobile")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NhsNumber")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("NumberOfContacts")
                        .HasColumnType("int");

                    b.Property<string>("OfferedCompletionLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpcsCodes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Postcode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProgrammeOutcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProviderUbrn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("ReferralAttachmentId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("ReferralLetterDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ReferralSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferringClinicianEmail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReferringGpPracticeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferringGpPracticeNumber")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReferringOrganisationEmail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReferringOrganisationOdsCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ServiceId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ServiceUserEthnicity")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ServiceUserEthnicityGroup")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Sex")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SourceEthnicity")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SourceSystem")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SpellIdentifier")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("StaffRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StatusReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SurgeryInLessThanEighteenWeeks")
                        .HasColumnType("bit");

                    b.Property<string>("Telephone")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TraceCount")
                        .HasColumnType("int");

                    b.Property<string>("TriagedCompletionLevel")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TriagedWeightedLevel")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Ubrn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("VulnerableDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WeeksOnWaitingList")
                        .HasColumnType("int");

                    b.Property<decimal?>("WeightKg")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("WeightPounds")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("WeightStones")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WeightUnits")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CriId");

                    b.HasIndex("Email");

                    b.HasIndex("FamilyName");

                    b.HasIndex("Mobile");

                    b.HasIndex("NhsNumber");

                    b.HasIndex("Postcode");

                    b.HasIndex("ProviderId");

                    b.HasIndex("Telephone");

                    b.HasIndex("Ubrn");

                    b.ToTable("Referrals");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.ReferralAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<string>("Address1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Address2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Address3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<decimal?>("CalculatedBmiAtRegistration")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("ConsentForFutureContactForEvaluation")
                        .HasColumnType("bit");

                    b.Property<bool?>("ConsentForGpAndNhsNumberLookup")
                        .HasColumnType("bit");

                    b.Property<bool?>("ConsentForReferrerUpdatedWithOutcome")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedByUserId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CriId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DateCompletedProgramme")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateLetterSent")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateOfBirth")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateOfBmiAtRegistration")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateOfProviderContactedServiceUser")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateOfProviderSelection")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateOfReferral")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DatePlacedOnWaitingList")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateStartedProgramme")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateToDelayUntil")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DelayReason")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Deprivation")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("DocumentVersion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Ethnicity")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FamilyName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("FirstRecordedWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset?>("FirstRecordedWeightDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("GivenName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("HasALearningDisability")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasAPhysicalDisability")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasActiveEatingDisorder")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasArthritisOfHip")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasArthritisOfKnee")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasDiabetesType1")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasDiabetesType2")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasHadBariatricSurgery")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasHypertension")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasRegisteredSeriousMentalIllness")
                        .HasColumnType("bit");

                    b.Property<decimal?>("HeightCm")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("HeightFeet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("HeightInches")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HeightUnits")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsErsClosed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMobileValid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPregnant")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTelephoneValid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVulnerable")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LastRecordedWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset?>("LastRecordedWeightDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("LastTraceDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("MethodOfContact")
                        .HasColumnType("int");

                    b.Property<string>("Mobile")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("MostRecentAttachmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("NhsLoginClaimEmail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NhsLoginClaimFamilyName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NhsLoginClaimGivenName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NhsLoginClaimMobile")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NhsNumber")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("NumberOfContacts")
                        .HasColumnType("int");

                    b.Property<string>("OfferedCompletionLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpcsCodes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Postcode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProgrammeOutcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProviderUbrn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("ReferralAttachmentId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("ReferralLetterDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ReferralSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferringClinicianEmail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReferringGpPracticeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferringGpPracticeNumber")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReferringOrganisationEmail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReferringOrganisationOdsCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ServiceId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ServiceUserEthnicity")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ServiceUserEthnicityGroup")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Sex")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SourceEthnicity")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SourceSystem")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SpellIdentifier")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("StaffRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StatusReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SurgeryInLessThanEighteenWeeks")
                        .HasColumnType("bit");

                    b.Property<string>("Telephone")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TraceCount")
                        .HasColumnType("int");

                    b.Property<string>("TriagedCompletionLevel")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TriagedWeightedLevel")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Ubrn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("VulnerableDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WeeksOnWaitingList")
                        .HasColumnType("int");

                    b.Property<decimal?>("WeightKg")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("WeightPounds")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("WeightStones")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WeightUnits")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.HasIndex("ModifiedByUserId");

                    b.ToTable("ReferralsAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.ReferralCri", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<DateTimeOffset>("ClinicalInfoLastUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<byte[]>("ClinicalInfoPdfBase64")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdateOfCriId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ReferralCri");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.ReferralCriAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ClinicalInfoLastUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdateOfCriId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AuditId");

                    b.ToTable("ReferralCriAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.ReferralQuestionnaire", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("Answers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("Completed")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("ConsentToShare")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("Delivered")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("FailureCount")
                        .HasColumnType("int");

                    b.Property<string>("FamilyName")
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("GivenName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NotificationKey")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset?>("PermanentFailure")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("QuestionnaireId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReferralId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Sending")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("Started")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset?>("TechnicalFailure")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("TemporaryFailure")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("NotificationKey")
                        .IsUnique()
                        .HasFilter("[NotificationKey] IS NOT NULL");

                    b.HasIndex("QuestionnaireId");

                    b.HasIndex("ReferralId")
                        .IsUnique();

                    b.ToTable("ReferralQuestionnaires");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.ReferralQuestionnaireAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<string>("Answers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("Completed")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("ConsentToShare")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("Delivered")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("FailureCount")
                        .HasColumnType("int");

                    b.Property<string>("FamilyName")
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("GivenName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NotificationKey")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset?>("PermanentFailure")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("QuestionnaireId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReferralId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Sending")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("Started")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset?>("TechnicalFailure")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("TemporaryFailure")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("AuditId");

                    b.ToTable("ReferralQuestionnairesAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.ReferralStatusReason", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Groups")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ReferralStatusReasons");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.ReferralStatusReasonAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Groups")
                        .HasColumnType("int");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AuditId");

                    b.ToTable("ReferralStatusReasonsAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("Expires")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReplacedByToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("Revoked")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("RevokedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProviderId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.RefreshTokenAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("Expires")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReplacedByToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("Revoked")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("RevokedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuditId");

                    b.ToTable("RefreshTokensAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.RequestResponseLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Controller")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Request")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("RequestAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ResponseAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RequestResponseLog");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.SelfReferral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ReferralId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("SelfReferrals");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.StaffRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("StaffRoles");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.StaffRoleAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AuditId");

                    b.ToTable("StaffRolesAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.TextMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("Base36DateSent")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("DobAttempts")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Number")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Outcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("Received")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ReferralId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Sent")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("Base36DateSent")
                        .IsUnique()
                        .HasFilter("[Base36DateSent] IS NOT NULL");

                    b.HasIndex("ReferralId");

                    b.ToTable("TextMessages");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.TextMessageAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("Base36DateSent")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("DobAttempts")
                        .HasColumnType("int");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Number")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Outcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("Received")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ReferralId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Sent")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("AuditId");

                    b.ToTable("TextMessagesAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.UserActionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Controller")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Method")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Request")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTimeOffset>("RequestAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserActionLogs");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.UserStore", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset?>("Expires")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("ForceExpiry")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Scope")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UsersStore");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.UserStoreAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset?>("Expires")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("ForceExpiry")
                        .HasColumnType("bit");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Scope")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuditId");

                    b.ToTable("UsersStoreAudit");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.Call", b =>
                {
                    b.HasOne("WmsHub.Business.Entities.Referral", "Referral")
                        .WithMany("Calls")
                        .HasForeignKey("ReferralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Referral");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.EthnicityOverride", b =>
                {
                    b.HasOne("WmsHub.Business.Entities.Ethnicity", "Ethnicity")
                        .WithMany("Overrides")
                        .HasForeignKey("EthnicityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ethnicity");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.ProviderAuth", b =>
                {
                    b.HasOne("WmsHub.Business.Entities.Provider", "Provider")
                        .WithOne("ProviderAuth")
                        .HasForeignKey("WmsHub.Business.Entities.ProviderAuth", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.ProviderSubmission", b =>
                {
                    b.HasOne("WmsHub.Business.Entities.Provider", "Provider")
                        .WithMany("ProviderSubmissions")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WmsHub.Business.Entities.Referral", "Referral")
                        .WithMany("ProviderSubmissions")
                        .HasForeignKey("ReferralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provider");

                    b.Navigation("Referral");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.Referral", b =>
                {
                    b.HasOne("WmsHub.Business.Entities.ReferralCri", "Cri")
                        .WithMany()
                        .HasForeignKey("CriId");

                    b.HasOne("WmsHub.Business.Entities.Provider", "Provider")
                        .WithMany("Referrals")
                        .HasForeignKey("ProviderId");

                    b.Navigation("Cri");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.ReferralAudit", b =>
                {
                    b.HasOne("WmsHub.Business.Entities.Referral", "Referral")
                        .WithMany("Audits")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WmsHub.Business.Entities.UserStore", "User")
                        .WithMany("ReferralAudits")
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Referral");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.ReferralQuestionnaire", b =>
                {
                    b.HasOne("WmsHub.Business.Entities.Questionnaire", "Questionnaire")
                        .WithMany("ReferralQuestionnaires")
                        .HasForeignKey("QuestionnaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WmsHub.Business.Entities.Referral", "Referral")
                        .WithOne("ReferralQuestionnaire")
                        .HasForeignKey("WmsHub.Business.Entities.ReferralQuestionnaire", "ReferralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Questionnaire");

                    b.Navigation("Referral");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.RefreshToken", b =>
                {
                    b.HasOne("WmsHub.Business.Entities.Provider", null)
                        .WithMany("RefreshTokens")
                        .HasForeignKey("ProviderId");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.TextMessage", b =>
                {
                    b.HasOne("WmsHub.Business.Entities.Referral", "Referral")
                        .WithMany("TextMessages")
                        .HasForeignKey("ReferralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Referral");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.Ethnicity", b =>
                {
                    b.Navigation("Overrides");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.Provider", b =>
                {
                    b.Navigation("ProviderAuth");

                    b.Navigation("ProviderSubmissions");

                    b.Navigation("Referrals");

                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.Questionnaire", b =>
                {
                    b.Navigation("ReferralQuestionnaires");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.Referral", b =>
                {
                    b.Navigation("Audits");

                    b.Navigation("Calls");

                    b.Navigation("ProviderSubmissions");

                    b.Navigation("ReferralQuestionnaire");

                    b.Navigation("TextMessages");
                });

            modelBuilder.Entity("WmsHub.Business.Entities.UserStore", b =>
                {
                    b.Navigation("ReferralAudits");
                });
#pragma warning restore 612, 618
        }
    }
}
